AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'This template creates a Mysql RDS Instance with an optional read replica'
Parameters:
  DBName:
    Default: MyDatabase
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBSubnetGroupName:
    Description: "Subnet Group that the instance should be deployed to"
    Type: String
    Default: "default"
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.
  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t2.small
    AllowedValues: [db.t1.micro, db.m1.small, db.m1.medium, db.m1.large, db.m1.xlarge,
      db.m2.xlarge, db.m2.2xlarge, db.m2.4xlarge, db.m3.medium, db.m3.large, db.m3.xlarge,
      db.m3.2xlarge, db.m4.large, db.m4.xlarge, db.m4.2xlarge, db.m4.4xlarge, db.m4.10xlarge,
      db.r3.large, db.r3.xlarge, db.r3.2xlarge, db.r3.4xlarge, db.r3.8xlarge, db.m2.xlarge,
      db.m2.2xlarge, db.m2.4xlarge, db.cr1.8xlarge, db.t2.micro, db.t2.small, db.t2.medium,
      db.t2.large]
    ConstraintDescription: must select a valid database instance type.
  EC2SecurityGroup:
    Description: The EC2 security group that contains instances that need access to
      the database
    Default: default
    Type: "AWS::EC2::SecurityGroup::Id"
    ConstraintDescription: must be a valid security group name.
  ReadReplicaTrueFalse:
    Type: String
    Default: 'true'
    AllowedValues: ['true','false']
    ConstraintDescription: must be true or false
  MultiAZ:
    Description: Multi-AZ master database
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false.
Conditions:
  Create-Read-Replica: !Equals [!Ref ReadReplicaTrueFalse, 'true']
Resources:
  myDBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "description"
      SubnetIds:
        - subnet-0a04e2307add496c1
        - subnet-0c7be17bbc6a744e4
  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: vpc-0739dbc722f780443
      GroupDescription: Open database for access
      SecurityGroupIngress:
      #- IpProtocol: tcp
      #  FromPort: '3306'
      #  ToPort: '3306'
      #  CidrIp: '0.0.0.0/0'
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        SourceSecurityGroupId:
          Ref: EC2SecurityGroup

  MasterDB:
    Type: AWS::RDS::DBInstance
    DependsOn:
      - DBEC2SecurityGroup
      - myDBSubnetGroup
    Properties:
      DBName:
        Ref: 'DBName'
      AllocatedStorage: !Ref 'DBAllocatedStorage'
      DBInstanceClass: !Ref 'DBInstanceClass'
      Engine: MySQL
      MasterUsername: !Ref 'DBUser'
      MasterUserPassword: !Ref 'DBPassword'
      MultiAZ: !Ref 'MultiAZ'
      Tags:
      - Key: Name
        Value: Master Database
      DBSubnetGroupName:
        Ref: myDBSubnetGroup
      VPCSecurityGroups:
        - Ref: DBEC2SecurityGroup
    DeletionPolicy: Snapshot
  ReplicaDB:
    Type: AWS::RDS::DBInstance
    DependsOn:
      - MasterDB
    Condition: Create-Read-Replica
    Properties:
      SourceDBInstanceIdentifier: !Ref 'MasterDB'
      DBInstanceClass: !Ref 'DBInstanceClass'
      Tags:
      - Key: Name
        Value: Read Replica Database
Outputs:
  MasterJDBCConnectionString:
    Description: JDBC connection string for the master database
    Value: !Join ['', ['jdbc:mysql://', !GetAtt [MasterDB, Endpoint.Address], ':',
        !GetAtt [MasterDB, Endpoint.Port], /, !Ref 'DBName']]
  ReplicaJDBCConnectionString:
    Condition: Create-Read-Replica
    Description: JDBC connection string for the replica database
    Value: !Join ['', ['jdbc:mysql://', !GetAtt [ReplicaDB, Endpoint.Address], ':',
        !GetAtt [ReplicaDB, Endpoint.Port], /, !Ref 'DBName']]